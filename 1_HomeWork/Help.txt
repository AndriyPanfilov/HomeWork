
ДЗ 1. Реалізація алгоритмів з функціями вищого порядку
Задача - реалізувати три алгоритми:

1 - for_each() - функція, що повертає void та приймає посилання на вектор інтів та функцію f,
та для кожного з елементів вектора викликає над елементом функцію f;

2 - all() - функція, що повертає bool та приймає посилання на вектор інтів та функцію p, яка для кожного 
елемента аналізує якусь умову та повертає true або false. all() повертає true тільки в тому випадку, коли 
виклик p на ВСІХ елементах повернув true. Для аналогії можете подивитись, як працює std::all_of() з хедера algorithm.

3 - Функцію count_if(), яка повертає int та приймає посилання на вектор та функцію f, що як і у all, аналізує елемент
на відповідність якійсь умові та повертає true або false. count_if() повинен рахувати кількість елементів, що повернули
true та повертати цю кількість. Для аналогії можете подивитись, як працює std::count_if() з хедера algorithm.
Для демонстрації виконаної домашки можете вивести вектор на екран за допомогою for_each() та потім викликати all() та count_if() над вектором декілька разів з різними функціями, і вивести все це на екран.

УВАГА: використовувати для даних алгоритмів вищенаведені стандартні функції СУВОРО ЗАБОРОНЕНО.
Вся суть домашки у тому, щоб написати ці алгоритми самостійно.

УВАГА 1.5: Будь-ласка, робіть домашку так, щоб ваші алгоритми могли приймати і звичайні вказівники на функції,
і лямбди. Так як це можливо у стандартних алгоритмах:

