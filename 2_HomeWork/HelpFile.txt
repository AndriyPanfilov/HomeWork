ДЗ 2. Реалізувати власний невеличкий unique_ptr

Реалізувати клас UniquePtr, який:

Зберігає у собі шаблонний вказівник на тип Т.
Перевантажує оператор * (розіменування вказівника на тип Т, яким володіє UniquePtr).
Перевантажує оператор -> (можливість адресувати члени типу Т).
Оператор bool, що вказує, володіє юнік на зараз якимось ресурсом чи ні.
Має move constructor та move assignment operator. (і конструктор з T*, і move з UniquePtr&&!)
Має дефолтний конструктор без параметру - у такому випадку вказівник буде nullptr.
Забороняє копіювання/копіююче присвоювання та конструювання з lvalue T.
Руйнує обєкт, яким володіє, у деструкторі (RAII).
Основна ідея цієї домашки - зрозуміти на практиці, як працює unique_ptr.
Не потрібно думати над надважкими кейсами та ситуаціями, ця домашка має ціль бути відносно простим
відпрацюванням ваших знань по мув семантиці та смарт пойнтерам. Переважно, якщо чогось не написано у домашці,
то цього можна не робити